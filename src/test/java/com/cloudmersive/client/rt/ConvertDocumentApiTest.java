/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudmersive.client.rt;

import com.cloudmersive.client.rt.model.AutodetectGetInfoResult;
import com.cloudmersive.client.rt.model.AutodetectToJpgResult;
import com.cloudmersive.client.rt.model.AutodetectToPngResult;
import com.cloudmersive.client.rt.model.AutodetectToThumbnailsResult;
import com.cloudmersive.client.rt.model.ConvertDocumentBatchJobCreateResult;
import com.cloudmersive.client.rt.model.ConvertDocumentJobStatusResult;
import com.cloudmersive.client.rt.model.CsvCollection;
import com.cloudmersive.client.rt.model.DocxToJpgResult;
import com.cloudmersive.client.rt.model.DocxToPngResult;
import com.cloudmersive.client.rt.model.EmlToHtmlResult;
import com.cloudmersive.client.rt.model.EmlToJpgResult;
import com.cloudmersive.client.rt.model.EmlToPngResult;
import java.io.File;
import com.cloudmersive.client.rt.model.GetFileTypeIconResult;
import com.cloudmersive.client.rt.model.KeynoteToJpgResult;
import com.cloudmersive.client.rt.model.KeynoteToPngResult;
import com.cloudmersive.client.rt.model.MsgToHtmlResult;
import com.cloudmersive.client.rt.model.MsgToJpgResult;
import com.cloudmersive.client.rt.model.MsgToPngResult;
import com.cloudmersive.client.rt.model.OdpToJpgResult;
import com.cloudmersive.client.rt.model.OdpToPngResult;
import com.cloudmersive.client.rt.model.OdsToJpgResult;
import com.cloudmersive.client.rt.model.OdsToPngResult;
import com.cloudmersive.client.rt.model.OdtToJpgResult;
import com.cloudmersive.client.rt.model.OdtToPngResult;
import com.cloudmersive.client.rt.model.PdfToJpgResult;
import com.cloudmersive.client.rt.model.PdfToPngDirectResult;
import com.cloudmersive.client.rt.model.PdfToPngResult;
import com.cloudmersive.client.rt.model.PptxToPngResult;
import com.cloudmersive.client.rt.model.RtfToJpgResult;
import com.cloudmersive.client.rt.model.RtfToPngResult;
import com.cloudmersive.client.rt.model.TextConversionResult;
import com.cloudmersive.client.rt.model.XlsxToPngResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.springframework.web.client.RestClientException;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConvertDocumentApi
 */
@Disabled
class ConvertDocumentApiTest {

    private final ConvertDocumentApi api = new ConvertDocumentApi();

    
    /**
     * Get document type information
     *
     * Auto-detects a document&#39;s type information; does not require file extension.  Analyzes file contents to confirm file type.  Even if no file extension is present, the auto-detect system will reliably analyze the contents of the file and identify its file type.  Supports over 100 image file formats, Office document file formats, PDF, and more.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentAutodetectGetInfoTest() {
        org.springframework.core.io.Resource inputFile = null;

        AutodetectGetInfoResult response = api.convertDocumentAutodetectGetInfo(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Document to JPG/JPEG image array
     *
     * Automatically detect file type and convert it to an array of JPG/JPEG Images.  Supports all of the major Office document file formats including Word (DOCX, DOC), Excel (XLSX, XLS), PowerPoint (PPTX, PPT), over 100 image formats, HTML files, and even multi-page TIFF files. Customize image quality using quality header.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentAutodetectToJpgTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer quality = null;

        AutodetectToJpgResult response = api.convertDocumentAutodetectToJpg(inputFile, quality);

        // TODO: test validations
    }
    
    /**
     * Convert Document to PDF
     *
     * Automatically detect file type and convert it to PDF.  Supports all of the major Office document file formats including Word (DOCX, DOC), Excel (XLSX, XLS), PowerPoint (PPTX, PPT), over 100 image formats, HTML files, text files, and even multi-page TIFF files.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentAutodetectToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentAutodetectToPdf(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Document to PDF as Batch Job
     *
     * Automatically detect file type and convert it to PDF.  Supports all of the major Office document file formats including Word (DOCX, DOC), Excel (XLSX, XLS), PowerPoint (PPTX, PPT), over 100 image formats, HTML files, text files, and even multi-page TIFF files.  This API is designed for large jobs that could take a long time to create and so runs as a batch job that returns a Job ID that you can use with the GetAsyncJobStatus API to check on the status of the Job and ultimately get the output result.  This API is only available for Cloudmersive Managed Instance and Private Cloud deployments.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentAutodetectToPdfBatchJobTest() {
        org.springframework.core.io.Resource inputFile = null;

        ConvertDocumentBatchJobCreateResult response = api.convertDocumentAutodetectToPdfBatchJob(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Document to PNG array
     *
     * Automatically detect file type and convert it to an array of PNG images.  Supports all of the major Office document file formats, over 100 image formats, and even multi-page TIFF files.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentAutodetectToPngArrayTest() {
        org.springframework.core.io.Resource inputFile = null;

        AutodetectToPngResult response = api.convertDocumentAutodetectToPngArray(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert File to Thumbnail Image
     *
     * Automatically detect file type and convert it to a PNG thumbnail. Supports all of the major Office document file formats including Word (DOCX, DOC), Excel (XLSX, XLS), PowerPoint (PPTX, PPT), over 100 image formats, HTML files, and even multi-page TIFF files. Returns a generic PNG thumbnail for unsupported formats. Maximum thumbnail size is 2048x2048.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentAutodetectToThumbnailTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        String extension = null;

        byte[] response = api.convertDocumentAutodetectToThumbnail(inputFile, maxWidth, maxHeight, extension);

        // TODO: test validations
    }
    
    /**
     * Convert File to Thumbnail Image Object
     *
     * Automatically detect file type and convert it to an array of PNG thumbnails, returned as an object. May specify the number of pages for multiple thumbnails; default is one thumbnail. Supports all of the major Office document file formats including Word (DOCX, DOC), Excel (XLSX, XLS), PowerPoint (PPTX, PPT), over 100 image formats, HTML files, and even multi-page TIFF files. Returns a generic PNG thumbnail for unsupported formats. Maximum thumbnail size is 2048x2048.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentAutodetectToThumbnailsAdvancedTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer pages = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        String extension = null;

        AutodetectToThumbnailsResult response = api.convertDocumentAutodetectToThumbnailsAdvanced(inputFile, pages, maxWidth, maxHeight, extension);

        // TODO: test validations
    }
    
    /**
     * Convert Document to Text (txt)
     *
     * Automatically detect file type and convert it to Text.  Supports all of the major Office document file formats including Word (DOCX, DOC), Excel (XLSX, XLS), PowerPoint (PPTX, PPT) and PDF files.  For spreadsheets, all worksheets will be included.  If you wish to exclude certain pages, worksheets, slides, etc. use the Split document API first, or the delete pages/slides/worksheet APIs first to adjust the document to the target state prior to converting to text.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentAutodetectToTxtTest() {
        org.springframework.core.io.Resource inputFile = null;
        String textFormattingMode = null;

        TextConversionResult response = api.convertDocumentAutodetectToTxt(inputFile, textFormattingMode);

        // TODO: test validations
    }
    
    /**
     * Convert Multiple CSV Files into a Single XLSX Spreadsheet
     *
     * Convert multiple Comma-Separated Values (CSV) files into a single Excel XLSX Spreadsheet, with one worksheet corresponding to each CSV file.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentCsvMultiToXlsxTest() {
        org.springframework.core.io.Resource inputFile1 = null;
        org.springframework.core.io.Resource inputFile2 = null;
        String worksheetNames = null;
        org.springframework.core.io.Resource inputFile3 = null;
        org.springframework.core.io.Resource inputFile4 = null;
        org.springframework.core.io.Resource inputFile5 = null;
        org.springframework.core.io.Resource inputFile6 = null;
        org.springframework.core.io.Resource inputFile7 = null;
        org.springframework.core.io.Resource inputFile8 = null;
        org.springframework.core.io.Resource inputFile9 = null;
        org.springframework.core.io.Resource inputFile10 = null;

        byte[] response = api.convertDocumentCsvMultiToXlsx(inputFile1, inputFile2, worksheetNames, inputFile3, inputFile4, inputFile5, inputFile6, inputFile7, inputFile8, inputFile9, inputFile10);

        // TODO: test validations
    }
    
    /**
     * Convert CSV to HTML document
     *
     * Convert Comma-Separated Values (CSV) file to HTML document.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentCsvToHtmlTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentCsvToHtml(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert CSV to PDF document
     *
     * Convert Comma-Separated Values (CSV) file to PDF document.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentCsvToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentCsvToPdf(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert CSV to Excel XLSX Spreadsheet
     *
     * Convert CSV file to Office Excel XLSX Workbooks file format.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentCsvToXlsxTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentCsvToXlsx(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Word DOC (97-03) Document to DOCX
     *
     * Convert/upgrade Office Word (97-2003 Format) Documents (doc) to the modern DOCX format
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentDocToDocxTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentDocToDocx(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Word DOC (97-03) Document to PDF
     *
     * Convert Office Word (97-2003 Format) Documents (doc) to standard PDF
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentDocToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentDocToPdf(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Word DOC (97-03) Document to Text (txt)
     *
     * Convert Office Word DOC (97-03) Document (doc) to text
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentDocToTxtTest() {
        org.springframework.core.io.Resource inputFile = null;

        TextConversionResult response = api.convertDocumentDocToTxt(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Word DOCX Document to Legacy Word DOC (97-03)
     *
     * Convert/downgrade modern Office Word DOCX Documents (DOCX) to the legacy Word DOC (97-2003 Format) format
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentDocxToDocTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentDocxToDoc(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Word DOCX Document to HTML Document
     *
     * Convert Office Word Document (DOCX) to HTML Document
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentDocxToHtmlTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentDocxToHtml(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Word DOCX Document to JPG/JPEG image array
     *
     * Converts an Office Word Document (DOCX) to an array of JPG/JPEG images, one for each page. Customize image quality using quality header.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentDocxToJpgTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer quality = null;

        DocxToJpgResult response = api.convertDocumentDocxToJpg(inputFile, quality);

        // TODO: test validations
    }
    
    /**
     * Convert Word DOCX Document to PDF
     *
     * Convert Office Word Documents (docx) to standard PDF
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentDocxToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentDocxToPdf(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Word DOCX Document to PNG image array
     *
     * Converts an Office Word Document (DOCX) file to an array of PNG images, one for each page.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentDocxToPngTest() {
        org.springframework.core.io.Resource inputFile = null;

        DocxToPngResult response = api.convertDocumentDocxToPng(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Word DOCX Document to RTF
     *
     * Convert an Office Word Document (DOCX) to Rich Text Format Document (RTF)
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentDocxToRtfTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentDocxToRtf(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Word DOCX Document to Text (txt)
     *
     * Convert Office Word Documents (docx) to text
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentDocxToTxtTest() {
        org.springframework.core.io.Resource inputFile = null;
        String textFormattingMode = null;

        TextConversionResult response = api.convertDocumentDocxToTxt(inputFile, textFormattingMode);

        // TODO: test validations
    }
    
    /**
     * Convert Email EML file to HTML string
     *
     * Convert Outlook Email EML file to HTML string and attachments. Supports images if they are base 64 inline.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentEmlToHtmlTest() {
        org.springframework.core.io.Resource inputFile = null;
        Boolean bodyOnly = null;
        Boolean includeAttachments = null;

        EmlToHtmlResult response = api.convertDocumentEmlToHtml(inputFile, bodyOnly, includeAttachments);

        // TODO: test validations
    }
    
    /**
     * Convert Email EML file to JPG/JPEG image array
     *
     * Converts an Outlook Email File (EML) to an array of JPG/JPEG images, one for each page. Customize image quality using quality header.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentEmlToJpgTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer quality = null;

        EmlToJpgResult response = api.convertDocumentEmlToJpg(inputFile, quality);

        // TODO: test validations
    }
    
    /**
     * Convert Email EML file to PDF document
     *
     * Convert Outlook Email EML file to PDF document. Supports images if they are base 64 inline.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentEmlToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;
        Boolean bodyOnly = null;

        byte[] response = api.convertDocumentEmlToPdf(inputFile, bodyOnly);

        // TODO: test validations
    }
    
    /**
     * Convert Email EML file to PNG image array
     *
     * Converts an Outlook Email File (EML) to an array of PNG images, one for each page.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentEmlToPngTest() {
        org.springframework.core.io.Resource inputFile = null;

        EmlToPngResult response = api.convertDocumentEmlToPng(inputFile);

        // TODO: test validations
    }
    
    /**
     * Get the status and result of a Convert Document Batch Job
     *
     * Returns the result of the Async Job - possible states can be STARTED or COMPLETED.  This API is only available for Cloudmersive Managed Instance and Private Cloud deployments.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentGetAsyncJobStatusTest() {
        String asyncJobID = null;

        ConvertDocumentJobStatusResult response = api.convertDocumentGetAsyncJobStatus(asyncJobID);

        // TODO: test validations
    }
    
    /**
     * Get PNG icon file for the file extension
     *
     * Returns a PNG icon for the given file format extension as a file for download. User may specify the icon size. Supports over 100 file formats, with a generic icon for unsupported formats.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentGetFileTypeIconTest() {
        String fileExtension = null;
        Integer iconSize = null;

        byte[] response = api.convertDocumentGetFileTypeIcon(fileExtension, iconSize);

        // TODO: test validations
    }
    
    /**
     * Get PNG icon byte array for the file extension
     *
     * Returns a PNG icon for the given file format extension directly as a byte array. User may specify the icon size. Supports over 100 file formats, with a generic icon for unsupported formats.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentGetFileTypeIconAdvancedTest() {
        String fileExtension = null;
        Integer iconSize = null;

        GetFileTypeIconResult response = api.convertDocumentGetFileTypeIconAdvanced(fileExtension, iconSize);

        // TODO: test validations
    }
    
    /**
     * Convert HTML document file to PDF Document
     *
     * Convert standard HTML, with full support for CSS, JavaScript, Images, and other complex behavior to PDF.  To use external files such as images, use an absolute URL to the file.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentHtmlToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;
        Boolean includeBackgroundGraphics = null;
        Integer scaleFactor = null;

        byte[] response = api.convertDocumentHtmlToPdf(inputFile, includeBackgroundGraphics, scaleFactor);

        // TODO: test validations
    }
    
    /**
     * Convert HTML document file to PNG image array
     *
     * Convert standard HTML, with full support for CSS, JavaScript, Images, and other complex behavior to an array of PNG images, one for each page.  To use external files in your HTML such as images, use an absolute URL to the file.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentHtmlToPngTest() {
        org.springframework.core.io.Resource inputFile = null;

        PdfToPngResult response = api.convertDocumentHtmlToPng(inputFile);

        // TODO: test validations
    }
    
    /**
     * HTML Document file to Text (txt)
     *
     * HTML document to text
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentHtmlToTxtTest() {
        org.springframework.core.io.Resource inputFile = null;

        TextConversionResult response = api.convertDocumentHtmlToTxt(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Keynote Presentation (KEY) to JPG/JPEG image array
     *
     * Converts a Mac Keynote Presentation (KEY) to an array of JPG/JPEG images, one for each page. Customize image quality using quality header.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentKeynoteToJpgTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer quality = null;

        KeynoteToJpgResult response = api.convertDocumentKeynoteToJpg(inputFile, quality);

        // TODO: test validations
    }
    
    /**
     * Convert Keynote Presentation (KEY) to PDF
     *
     * Convert Mac Keynote Presentation (KEY) to standard PDF
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentKeynoteToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentKeynoteToPdf(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Keynote Presentation (KEY) to PNG image array
     *
     * Converts a Mac Keynote Presentation (KEY) to an array of PNG images, one for each page.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentKeynoteToPngTest() {
        org.springframework.core.io.Resource inputFile = null;

        KeynoteToPngResult response = api.convertDocumentKeynoteToPng(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Keynote Presentation (KEY) to PPTX
     *
     * Convert Mac Keynote Presentation (KEY) to PowerPoint Presentation (PPTX)
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentKeynoteToPptxTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentKeynoteToPptx(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Email MSG file to HTML string
     *
     * Convert Outlook Email MSG file to HTML string and attachments. Supports images if they are base 64 inline. Supports most, but not all, RTF bodied MSG files.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentMsgToHtmlTest() {
        org.springframework.core.io.Resource inputFile = null;
        Boolean bodyOnly = null;
        Boolean includeAttachments = null;

        MsgToHtmlResult response = api.convertDocumentMsgToHtml(inputFile, bodyOnly, includeAttachments);

        // TODO: test validations
    }
    
    /**
     * Convert Email MSG file to JPG/JPEG image array
     *
     * Converts an Outlook Message File (MSG) to an array of JPG/JPEG images, one for each page. Customize image quality using quality header.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentMsgToJpgTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer quality = null;

        MsgToJpgResult response = api.convertDocumentMsgToJpg(inputFile, quality);

        // TODO: test validations
    }
    
    /**
     * Convert Email MSG file to PDF document
     *
     * Convert Outlook Email MSG file to PDF document. Supports images if they are base 64 inline. Supports most, but not all, RTF bodied MSG files.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentMsgToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;
        Boolean bodyOnly = null;

        byte[] response = api.convertDocumentMsgToPdf(inputFile, bodyOnly);

        // TODO: test validations
    }
    
    /**
     * Convert Email MSG file to PNG image array
     *
     * Converts an Outlook Email Message File (MSG) to an array of PNG images, one for each page.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentMsgToPngTest() {
        org.springframework.core.io.Resource inputFile = null;

        MsgToPngResult response = api.convertDocumentMsgToPng(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert ODP Presentation to JPG/JPEG image array
     *
     * Converts an Open Document Presentation (ODP) to an array of JPG/JPEG images, one for each page. Customize image quality using quality header.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentOdpToJpgTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer quality = null;

        OdpToJpgResult response = api.convertDocumentOdpToJpg(inputFile, quality);

        // TODO: test validations
    }
    
    /**
     * Convert ODP Presentation to PDF
     *
     * Convert Office Open Document Presentation (ODP) to standard PDF
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentOdpToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentOdpToPdf(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert ODP Presentation to PNG image array
     *
     * Converts an Office Open Document Presentation (ODP) to an array of PNG images, one for each page.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentOdpToPngTest() {
        org.springframework.core.io.Resource inputFile = null;

        OdpToPngResult response = api.convertDocumentOdpToPng(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert ODP Presentation to PPTX
     *
     * Convert Office Open Document Presentation (ODP) to PowerPoint Presentation (PPTX)
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentOdpToPptxTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentOdpToPptx(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert ODS Spreadsheet to JPG/JPEG image array
     *
     * Converts an Open Document Spreadsheet (ODS) to an array of JPG/JPEG images, one for each page. Customize image quality using quality header.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentOdsToJpgTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer quality = null;

        OdsToJpgResult response = api.convertDocumentOdsToJpg(inputFile, quality);

        // TODO: test validations
    }
    
    /**
     * Convert ODS Spreadsheet to PDF
     *
     * Convert Office Open Document Spreadsheet (ODS) to standard PDF
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentOdsToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentOdsToPdf(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert ODS Spreadsheet to PNG image array
     *
     * Converts an Office Open Document Spreadsheet (ODS) to an array of PNG images, one for each page.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentOdsToPngTest() {
        org.springframework.core.io.Resource inputFile = null;

        OdsToPngResult response = api.convertDocumentOdsToPng(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert ODS Spreadsheet to XLSX
     *
     * Convert Office Open Document Spreadsheet (ODS) to Excel Spreadsheet (XLSX)
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentOdsToXlsxTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentOdsToXlsx(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert ODT Text File to Word DOCX
     *
     * Convert Office Open Document Text File (ODT) to Word DOCX Document
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentOdtToDocxTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentOdtToDocx(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert ODT Text File to JPG/JPEG image array
     *
     * Converts an Open Document Text File (ODT) to an array of JPG/JPEG images, one for each page. Customize image quality using quality header.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentOdtToJpgTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer quality = null;

        OdtToJpgResult response = api.convertDocumentOdtToJpg(inputFile, quality);

        // TODO: test validations
    }
    
    /**
     * Convert ODT Text File to PDF
     *
     * Convert Office Open Document Text File (ODT) to standard PDF
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentOdtToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentOdtToPdf(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert ODT Text File to PNG image array
     *
     * Converts an Office Open Document Text File (ODT) to an array of PNG images, one for each page.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentOdtToPngTest() {
        org.springframework.core.io.Resource inputFile = null;

        OdtToPngResult response = api.convertDocumentOdtToPng(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert PDF to Word DOCX Document
     *
     * Convert standard PDF to Office Word Documents (docx).    Converts a PDF at high fidelity into Word format, where it can be easily edited and processed.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPdfToDocxTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentPdfToDocx(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert PDF to Word DOCX Document based on rasterized version of the PDF
     *
     * Convert standard PDF to Office Word Documents (docx), but first rasterize the PDF.    Converts a PDF at high fidelity into Word format.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPdfToDocxRasterizeTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentPdfToDocxRasterize(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert PDF to JPG/JPEG image array
     *
     * Converts a PDF Document to an array of JPG/JPEG images, one for each page. Customize image quality using quality header.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPdfToJpgTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer quality = null;

        PdfToJpgResult response = api.convertDocumentPdfToJpg(inputFile, quality);

        // TODO: test validations
    }
    
    /**
     * Convert PDF to PNG Image Array
     *
     * Convert PDF document to PNG array, one image per page.  Returns PNG images as temporary expiring URLs.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPdfToPngArrayTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer dpi = null;

        PdfToPngResult response = api.convertDocumentPdfToPngArray(inputFile, dpi);

        // TODO: test validations
    }
    
    /**
     * Convert PDF to PNG Image Array (Direct)
     *
     * Convert PDF document to PNG array, one image per page.  Returns PNG images directly in the response objects.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPdfToPngArrayDirectTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer dpi = null;

        PdfToPngDirectResult response = api.convertDocumentPdfToPngArrayDirect(inputFile, dpi);

        // TODO: test validations
    }
    
    /**
     * Convert PDF to Single PNG image
     *
     * Convert PDF document to a single tall PNG image, by stacking/concatenating the images vertically into a single \&quot;tall\&quot; image
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPdfToPngSingleTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentPdfToPngSingle(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert PDF to PowerPoint PPTX Presentation
     *
     * Convert standard PDF to Office PowerPoint Presentation (pptx).  Converts a PDF file at high fidelity into PowerPoint format, where it can be easily edited and processed.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPdfToPptxTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentPdfToPptx(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert PDF to TIFF image
     *
     * Converts a PDF Document to a TIFF image.  If the PDF contains multiple pages, these pages will be represented as separate pages within the output TIFF image.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPdfToTiffTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer dpi = null;
        Boolean lzwCompression = null;

        byte[] response = api.convertDocumentPdfToTiff(inputFile, dpi, lzwCompression);

        // TODO: test validations
    }
    
    /**
     * Convert PDF Document to Text (txt)
     *
     * PDF document to text
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPdfToTxtTest() {
        org.springframework.core.io.Resource inputFile = null;
        String textFormattingMode = null;

        TextConversionResult response = api.convertDocumentPdfToTxt(inputFile, textFormattingMode);

        // TODO: test validations
    }
    
    /**
     * Convert PNG Array to PDF
     *
     * Convert an array of PNG images, one image per page, into a newly-created PDF.  Supports images of different sizes as input.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPngArrayToPdfTest() {
        org.springframework.core.io.Resource inputFile1 = null;
        org.springframework.core.io.Resource inputFile2 = null;
        org.springframework.core.io.Resource inputFile3 = null;
        org.springframework.core.io.Resource inputFile4 = null;
        org.springframework.core.io.Resource inputFile5 = null;
        org.springframework.core.io.Resource inputFile6 = null;
        org.springframework.core.io.Resource inputFile7 = null;
        org.springframework.core.io.Resource inputFile8 = null;
        org.springframework.core.io.Resource inputFile9 = null;
        org.springframework.core.io.Resource inputFile10 = null;

        byte[] response = api.convertDocumentPngArrayToPdf(inputFile1, inputFile2, inputFile3, inputFile4, inputFile5, inputFile6, inputFile7, inputFile8, inputFile9, inputFile10);

        // TODO: test validations
    }
    
    /**
     * Convert PNG Array to PDF and remove transparency
     *
     * Convert an array of PNG images, remove transparency in source images, one image per page, into a newly-created PDF.  Supports images of different sizes as input.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPngArrayToPdfFlattenTransparencyTest() {

        Object response = api.convertDocumentPngArrayToPdfFlattenTransparency();

        // TODO: test validations
    }
    
    /**
     * Convert PowerPoint PPT (97-03) Presentation to PDF
     *
     * Convert Office PowerPoint (97-2003) Documents (ppt) to standard PDF
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPptToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentPptToPdf(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert PowerPoint PPT (97-03) Presentation to PPTX
     *
     * Convert/upgrade Office PowerPoint (97-2003) Documents (ppt) to modern PPTX
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPptToPptxTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentPptToPptx(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert PowerPoint PPTX Presentation to PDF
     *
     * Convert Office PowerPoint Documents (pptx) to standard PDF
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPptxToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentPptxToPdf(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert PowerPoint PPTX to PNG image array
     *
     * Converts a PowerPoint Presentation (PPTX) file to an array of PNG images, one for each page.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPptxToPngTest() {
        org.springframework.core.io.Resource inputFile = null;

        PptxToPngResult response = api.convertDocumentPptxToPng(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert PowerPoint PPTX presentation to Legacy PowerPoint PPT (97-03)
     *
     * Convert/downgrade modern Office PowerPoint PPTX Presentation to the legacy PowerPoint PPT (97-2003 Format) format
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPptxToPptTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentPptxToPpt(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert PowerPoint PPTX Presentation to Text (txt)
     *
     * Convert Office PowerPoint Documents (pptx) to standard Text
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentPptxToTxtTest() {
        org.springframework.core.io.Resource inputFile = null;

        TextConversionResult response = api.convertDocumentPptxToTxt(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Rich Text Format RTF to DOCX Document
     *
     * Convert Rich Text Format Document (RTF) to Word DOCX Document
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentRtfToDocxTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentRtfToDocx(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Rich Text Format RTF to HTML Document
     *
     * Convert Rich Text Format Document (RTF) to HTML Document
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentRtfToHtmlTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentRtfToHtml(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Rich Text Format RTF to JPG/JPEG image array
     *
     * Converts a Rich Text Format Document (RTF) to an array of JPG/JPEG images, one for each page. Customize image quality using quality header.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentRtfToJpgTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer quality = null;

        RtfToJpgResult response = api.convertDocumentRtfToJpg(inputFile, quality);

        // TODO: test validations
    }
    
    /**
     * Convert Rich Text Format RTF to PDF
     *
     * Convert Rich Text Format Document (RTF) to standard PDF
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentRtfToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentRtfToPdf(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Rich Text Format RTF to PNG image array
     *
     * Converts a Rich Text Format Document (RTF) to an array of PNG images, one for each page.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentRtfToPngTest() {
        org.springframework.core.io.Resource inputFile = null;

        RtfToPngResult response = api.convertDocumentRtfToPng(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert TXT text file to PDF Document
     *
     * Convert simple text files to PDF.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentTxtToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;
        Integer scaleFactor = null;

        byte[] response = api.convertDocumentTxtToPdf(inputFile, scaleFactor);

        // TODO: test validations
    }
    
    /**
     * Convert Excel XLS (97-03) Spreadsheet to CSV
     *
     * Convert/upgrade Office Excel (97-2003) Workbooks (xls) to standard CSV format.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentXlsToCsvTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentXlsToCsv(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Excel XLS (97-03) Spreadsheet to PDF
     *
     * Convert Office Excel (97-2003) Workbooks (xls) to standard PDF.  Converts all worksheets in the workbook to PDF.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentXlsToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentXlsToPdf(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Excel XLS (97-03) Spreadsheet to XLSX
     *
     * Convert/upgrade Office Excel (97-2003) Workbooks (xls) to modern XLSX format.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentXlsToXlsxTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentXlsToXlsx(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Excel XLSX Spreadsheet to CSV, Single Worksheet
     *
     * Convert Office Excel Workbooks (XLSX) to standard Comma-Separated Values (CSV) format.  Supports both XLSX and XLSB file Excel formats.  If the input file contains multiple worksheets, the first one is used.  If you wish to convert all of the worksheets (not just the first one), be sure to use the xlsx/to/csv/multi API.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentXlsxToCsvTest() {
        org.springframework.core.io.Resource inputFile = null;
        String outputEncoding = null;

        byte[] response = api.convertDocumentXlsxToCsv(inputFile, outputEncoding);

        // TODO: test validations
    }
    
    /**
     * Convert Excel XLSX Spreadsheet to CSV, Multiple Worksheets
     *
     * Convert Office Excel Workbooks (XLSX) to standard Comma-Separated Values (CSV) format, with support for multiple worksheets.  Supports both XLSX and XLSB file Excel formats.  Returns multiple CSV files, one for each worksheet (tab) in the spreadsheet.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentXlsxToCsvMultiTest() {
        org.springframework.core.io.Resource inputFile = null;
        String outputEncoding = null;

        CsvCollection response = api.convertDocumentXlsxToCsvMulti(inputFile, outputEncoding);

        // TODO: test validations
    }
    
    /**
     * Convert Excel XLSX Spreadsheet to HTML Document
     *
     * Convert Office Excel Spreadsheet (XLSX) to HTML Document.  Converts all worksheets to HTML.  Supports both XLSX and XLSB Excel file formats.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentXlsxToHtmlTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentXlsxToHtml(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Excel XLSX Spreadsheet to PDF
     *
     * Convert Office Excel Workbooks (XLSX) to standard PDF.  Converts all worksheets in the workbook to PDF.  Supports both XLSX and XLSB Excel file formats.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentXlsxToPdfTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentXlsxToPdf(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Excel XLSX spreadsheet to PNG image array
     *
     * Converts an Excel Spreadsheet (XLSX) file to an array of PNG images, one for each page.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentXlsxToPngTest() {
        org.springframework.core.io.Resource inputFile = null;

        XlsxToPngResult response = api.convertDocumentXlsxToPng(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Excel XLSX Spreadsheet to Text (txt)
     *
     * Convert Office Excel Workbooks (XLSX) to standard Text.  Converts all worksheets in the workbook to Text.  Supports both XLSX and XLSB file formats.  When a spreadsheet contains multiple worksheets, will export all of the text from all of the worksheets.  If you wish to export the text from only one worksheet, try using the Split XLSX API to split the spreadsheet into multiple worksheet files, and then run XLSX to Text on the individual worksheet file that you need to extract the text from.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentXlsxToTxtTest() {
        org.springframework.core.io.Resource inputFile = null;

        TextConversionResult response = api.convertDocumentXlsxToTxt(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert Excel XLSX Spreadsheet to Legacy Excel XLS (97-03)
     *
     * Convert/downgrade modern Office Excel XLSX Spreadsheet to the legacy Excel XLS (97-2003 Format) format
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertDocumentXlsxToXlsTest() {
        org.springframework.core.io.Resource inputFile = null;

        byte[] response = api.convertDocumentXlsxToXls(inputFile);

        // TODO: test validations
    }
    
}
