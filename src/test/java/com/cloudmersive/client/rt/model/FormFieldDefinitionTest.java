/*
 * ocrapi
 * The powerful Optical Character Recognition (OCR) APIs let you convert scanned images of pages into recognized text.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudmersive.client.rt.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for FormFieldDefinition
 */
class FormFieldDefinitionTest {
    private final FormFieldDefinition model = new FormFieldDefinition();

    /**
     * Model tests for FormFieldDefinition
     */
    @Test
    void testFormFieldDefinition() {
        // TODO: test FormFieldDefinition
    }

    /**
     * Test the property 'fieldID'
     */
    @Test
    void fieldIDTest() {
        // TODO: test fieldID
    }

    /**
     * Test the property 'leftAnchor'
     */
    @Test
    void leftAnchorTest() {
        // TODO: test leftAnchor
    }

    /**
     * Test the property 'topAnchor'
     */
    @Test
    void topAnchorTest() {
        // TODO: test topAnchor
    }

    /**
     * Test the property 'bottomAnchor'
     */
    @Test
    void bottomAnchorTest() {
        // TODO: test bottomAnchor
    }

    /**
     * Test the property 'alternateAnchor'
     */
    @Test
    void alternateAnchorTest() {
        // TODO: test alternateAnchor
    }

    /**
     * Test the property 'anchorMode'
     */
    @Test
    void anchorModeTest() {
        // TODO: test anchorMode
    }

    /**
     * Test the property 'dataType'
     */
    @Test
    void dataTypeTest() {
        // TODO: test dataType
    }

    /**
     * Test the property 'targetDigitCount'
     */
    @Test
    void targetDigitCountTest() {
        // TODO: test targetDigitCount
    }

    /**
     * Test the property 'minimumCharacterCount'
     */
    @Test
    void minimumCharacterCountTest() {
        // TODO: test minimumCharacterCount
    }

    /**
     * Test the property 'allowNumericDigits'
     */
    @Test
    void allowNumericDigitsTest() {
        // TODO: test allowNumericDigits
    }

    /**
     * Test the property 'verticalAlignmentType'
     */
    @Test
    void verticalAlignmentTypeTest() {
        // TODO: test verticalAlignmentType
    }

    /**
     * Test the property 'horizontalAlignmentType'
     */
    @Test
    void horizontalAlignmentTypeTest() {
        // TODO: test horizontalAlignmentType
    }

    /**
     * Test the property 'targetFieldWidthRelative'
     */
    @Test
    void targetFieldWidthRelativeTest() {
        // TODO: test targetFieldWidthRelative
    }

    /**
     * Test the property 'targetFieldHeightRelative'
     */
    @Test
    void targetFieldHeightRelativeTest() {
        // TODO: test targetFieldHeightRelative
    }

    /**
     * Test the property 'targetFieldHorizontalAdjustment'
     */
    @Test
    void targetFieldHorizontalAdjustmentTest() {
        // TODO: test targetFieldHorizontalAdjustment
    }

    /**
     * Test the property 'targetFieldVerticalAdjustment'
     */
    @Test
    void targetFieldVerticalAdjustmentTest() {
        // TODO: test targetFieldVerticalAdjustment
    }

    /**
     * Test the property 'ignore'
     */
    @Test
    void ignoreTest() {
        // TODO: test ignore
    }

    /**
     * Test the property 'options'
     */
    @Test
    void optionsTest() {
        // TODO: test options
    }

}
