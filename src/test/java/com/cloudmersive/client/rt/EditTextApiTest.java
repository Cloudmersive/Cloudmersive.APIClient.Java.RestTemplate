/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudmersive.client.rt;

import com.cloudmersive.client.rt.model.Base64DecodeRequest;
import com.cloudmersive.client.rt.model.Base64DecodeResponse;
import com.cloudmersive.client.rt.model.Base64DetectRequest;
import com.cloudmersive.client.rt.model.Base64DetectResponse;
import com.cloudmersive.client.rt.model.Base64EncodeRequest;
import com.cloudmersive.client.rt.model.Base64EncodeResponse;
import com.cloudmersive.client.rt.model.ChangeLineEndingResponse;
import com.cloudmersive.client.rt.model.DetectLineEndingsResponse;
import java.io.File;
import com.cloudmersive.client.rt.model.FindStringRegexRequest;
import com.cloudmersive.client.rt.model.FindStringRegexResponse;
import com.cloudmersive.client.rt.model.FindStringSimpleRequest;
import com.cloudmersive.client.rt.model.FindStringSimpleResponse;
import com.cloudmersive.client.rt.model.RemoveHtmlFromTextRequest;
import com.cloudmersive.client.rt.model.RemoveHtmlFromTextResponse;
import com.cloudmersive.client.rt.model.RemoveWhitespaceFromTextRequest;
import com.cloudmersive.client.rt.model.RemoveWhitespaceFromTextResponse;
import com.cloudmersive.client.rt.model.ReplaceStringRegexRequest;
import com.cloudmersive.client.rt.model.ReplaceStringRegexResponse;
import com.cloudmersive.client.rt.model.ReplaceStringSimpleRequest;
import com.cloudmersive.client.rt.model.ReplaceStringSimpleResponse;
import com.cloudmersive.client.rt.model.TextEncodingDetectResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.springframework.web.client.RestClientException;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EditTextApi
 */
@Disabled
class EditTextApiTest {

    private final EditTextApi api = new EditTextApi();

    
    /**
     * Base 64 decode, convert base 64 string to binary content
     *
     * Decodes / converts base 64 UTF-8 text string to binary content
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void editTextBase64DecodeTest() {
        Base64DecodeRequest request = null;

        Base64DecodeResponse response = api.editTextBase64Decode(request);

        // TODO: test validations
    }
    
    /**
     * Detect, check if text string is base 64 encoded
     *
     * Checks, detects if input string is base 64 encoded
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void editTextBase64DetectTest() {
        Base64DetectRequest request = null;

        Base64DetectResponse response = api.editTextBase64Detect(request);

        // TODO: test validations
    }
    
    /**
     * Base 64 encode, convert binary or file data to a text string
     *
     * Encodes / converts binary or file data to a text string
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void editTextBase64EncodeTest() {
        Base64EncodeRequest request = null;

        Base64EncodeResponse response = api.editTextBase64Encode(request);

        // TODO: test validations
    }
    
    /**
     * Set, change line endings of a text file
     *
     * Sets the line ending type of a text file; set to Windows, Unix or Mac.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void editTextChangeLineEndingsTest() {
        String lineEndingType = null;
        org.springframework.core.io.Resource inputFile = null;

        ChangeLineEndingResponse response = api.editTextChangeLineEndings(lineEndingType, inputFile);

        // TODO: test validations
    }
    
    /**
     * Detect line endings of a text file
     *
     * Detect line ending type (Windows, Unix or Mac) of an input file.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void editTextDetectLineEndingsTest() {
        org.springframework.core.io.Resource inputFile = null;

        DetectLineEndingsResponse response = api.editTextDetectLineEndings(inputFile);

        // TODO: test validations
    }
    
    /**
     * Find a regular expression regex in text input
     *
     * Find all occurrences of the input regular expression in the input content, and returns the matches
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void editTextFindRegexTest() {
        FindStringRegexRequest request = null;

        FindStringRegexResponse response = api.editTextFindRegex(request);

        // TODO: test validations
    }
    
    /**
     * Find a string in text input
     *
     * Finds all occurrences of the input string in the input content, and returns the matches
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void editTextFindSimpleTest() {
        FindStringSimpleRequest request = null;

        FindStringSimpleResponse response = api.editTextFindSimple(request);

        // TODO: test validations
    }
    
    /**
     * Remove whitespace from text string
     *
     * Removes all whitespace from text, leaving behind only non-whitespace characters.  Whitespace includes newlines, spaces and other whitespace characters.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void editTextRemoveAllWhitespaceTest() {
        RemoveWhitespaceFromTextRequest request = null;

        RemoveWhitespaceFromTextResponse response = api.editTextRemoveAllWhitespace(request);

        // TODO: test validations
    }
    
    /**
     * Remove HTML from text string
     *
     * Removes HTML from text, leaving behind only text.  Formatted text will become plain text.  Important for protecting against HTML and Cross-Site-Scripting attacks.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void editTextRemoveHtmlTest() {
        RemoveHtmlFromTextRequest request = null;

        RemoveHtmlFromTextResponse response = api.editTextRemoveHtml(request);

        // TODO: test validations
    }
    
    /**
     * Replace a string in text with a regex regular expression string
     *
     * Replaces all occurrences of the input regular expression regex string in the input content, and returns the result
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void editTextReplaceRegexTest() {
        ReplaceStringRegexRequest request = null;

        ReplaceStringRegexResponse response = api.editTextReplaceRegex(request);

        // TODO: test validations
    }
    
    /**
     * Replace a string in text with another string value
     *
     * Replaces all occurrences of the input string in the input content, and returns the result
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void editTextReplaceSimpleTest() {
        ReplaceStringSimpleRequest request = null;

        ReplaceStringSimpleResponse response = api.editTextReplaceSimple(request);

        // TODO: test validations
    }
    
    /**
     * Detect text encoding of file
     *
     * Checks text encoding of file
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void editTextTextEncodingDetectTest() {
        org.springframework.core.io.Resource inputFile = null;

        TextEncodingDetectResponse response = api.editTextTextEncodingDetect(inputFile);

        // TODO: test validations
    }
    
    /**
     * Trim leading and trailing whitespace from text string
     *
     * Trim leading and trailing whitespace from text, leaving behind a trimmed string.  Whitespace includes newlines, spaces and other whitespace characters.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void editTextTrimWhitespaceTest() {
        RemoveWhitespaceFromTextRequest request = null;

        RemoveWhitespaceFromTextResponse response = api.editTextTrimWhitespace(request);

        // TODO: test validations
    }
    
}
