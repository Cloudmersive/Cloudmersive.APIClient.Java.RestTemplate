/*
 * barcodeapi
 * Barcode APIs let you generate barcode images, and recognize values from images of barcodes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudmersive.client.rt;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.springframework.web.client.RestClientException;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GenerateBarcodeApi
 */
@Disabled
class GenerateBarcodeApiTest {

    private final GenerateBarcodeApi api = new GenerateBarcodeApi();

    
    /**
     * Generate a EAN-13 code barcode as PNG file
     *
     * Validates and generate a EAN-13 barcode as a PNG file, a type of 1D barcode
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void generateBarcodeEAN13Test() {
        String value = null;

        byte[] response = api.generateBarcodeEAN13(value);

        // TODO: test validations
    }
    
    /**
     * Generate a EAN-8 code barcode as PNG file
     *
     * Validates and generate a EAN-8 barcode as a PNG file, a type of 1D barcode
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void generateBarcodeEAN8Test() {
        String value = null;

        byte[] response = api.generateBarcodeEAN8(value);

        // TODO: test validations
    }
    
    /**
     * Generate a QR code barcode as PNG file
     *
     * Generate a QR code barcode as a PNG file, a type of 2D barcode which can encode free-form text information
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void generateBarcodeQRCodeTest() {
        String value = null;

        byte[] response = api.generateBarcodeQRCode(value);

        // TODO: test validations
    }
    
    /**
     * Generate a UPC-A code barcode as PNG file
     *
     * Validate and generate a UPC-A barcode as a PNG file, a type of 1D barcode
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void generateBarcodeUPCATest() {
        String value = null;

        byte[] response = api.generateBarcodeUPCA(value);

        // TODO: test validations
    }
    
    /**
     * Generate a UPC-E code barcode as PNG file
     *
     * Validates and generate a UPC-E barcode as a PNG file, a type of 1D barcode
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void generateBarcodeUPCETest() {
        String value = null;

        byte[] response = api.generateBarcodeUPCE(value);

        // TODO: test validations
    }
    
}
