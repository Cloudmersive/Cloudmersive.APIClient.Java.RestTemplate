/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudmersive.client.rt;

import java.io.File;
import com.cloudmersive.client.rt.model.HtmlMdResult;
import com.cloudmersive.client.rt.model.HtmlToOfficeRequest;
import com.cloudmersive.client.rt.model.HtmlToPdfRequest;
import com.cloudmersive.client.rt.model.HtmlToPngRequest;
import com.cloudmersive.client.rt.model.HtmlToTextRequest;
import com.cloudmersive.client.rt.model.HtmlToTextResponse;
import com.cloudmersive.client.rt.model.ScreenshotRequest;
import com.cloudmersive.client.rt.model.UrlToPdfRequest;
import com.cloudmersive.client.rt.model.UrlToTextRequest;
import com.cloudmersive.client.rt.model.UrlToTextResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.springframework.web.client.RestClientException;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConvertWebApi
 */
@Disabled
class ConvertWebApiTest {

    private final ConvertWebApi api = new ConvertWebApi();

    
    /**
     * Convert HTML to Word DOCX Document
     *
     * Convert HTML to Office Word Document (DOCX) format
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertWebHtmlToDocxTest() {
        HtmlToOfficeRequest inputRequest = null;

        byte[] response = api.convertWebHtmlToDocx(inputRequest);

        // TODO: test validations
    }
    
    /**
     * Convert HTML string to PDF
     *
     * Fully renders a website and returns a PDF of the HTML.  Javascript, HTML5, CSS and other advanced features are all supported.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertWebHtmlToPdfTest() {
        HtmlToPdfRequest input = null;

        byte[] response = api.convertWebHtmlToPdf(input);

        // TODO: test validations
    }
    
    /**
     * Convert HTML string to PNG screenshot
     *
     * Fully renders a website and returns a PNG (screenshot) of the HTML.  Javascript, HTML5, CSS and other advanced features are all supported.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertWebHtmlToPngTest() {
        HtmlToPngRequest input = null;

        byte[] response = api.convertWebHtmlToPng(input);

        // TODO: test validations
    }
    
    /**
     * Convert HTML string to text (txt)
     *
     * Converts an HTML string input into text (txt); extracts text from HTML
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertWebHtmlToTxtTest() {
        HtmlToTextRequest input = null;

        HtmlToTextResponse response = api.convertWebHtmlToTxt(input);

        // TODO: test validations
    }
    
    /**
     * Convert Markdown to HTML
     *
     * Convert a markdown file (.md) to HTML
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertWebMdToHtmlTest() {
        org.springframework.core.io.Resource inputFile = null;

        HtmlMdResult response = api.convertWebMdToHtml(inputFile);

        // TODO: test validations
    }
    
    /**
     * Convert a URL to PDF
     *
     * Fully renders a website and returns a PDF of the full page.  Javascript, HTML5, CSS and other advanced features are all supported.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertWebUrlToPdfTest() {
        UrlToPdfRequest input = null;

        byte[] response = api.convertWebUrlToPdf(input);

        // TODO: test validations
    }
    
    /**
     * Take screenshot of URL
     *
     * Fully renders a website and returns a PNG screenshot of the full page image.  Javascript, HTML5, CSS and other advanced features are all supported.
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertWebUrlToScreenshotTest() {
        ScreenshotRequest input = null;

        byte[] response = api.convertWebUrlToScreenshot(input);

        // TODO: test validations
    }
    
    /**
     * Convert website URL page to text (txt)
     *
     * Converts a website URL page into text (txt); extracts text from HTML
     *
     * @throws RestClientException
     *          if the Api call fails
     */
    @Test
    void convertWebUrlToTxtTest() {
        UrlToTextRequest input = null;

        UrlToTextResponse response = api.convertWebUrlToTxt(input);

        // TODO: test validations
    }
    
}
