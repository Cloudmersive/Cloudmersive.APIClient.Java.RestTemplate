/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudmersive.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.cloudmersive.client.model.SetFormFieldValue;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Request to set the fields in a PDF form
 */
@ApiModel(description = "Request to set the fields in a PDF form")
@JsonPropertyOrder({
  SetPdfFormFieldsRequest.JSON_PROPERTY_FIELD_VALUES,
  SetPdfFormFieldsRequest.JSON_PROPERTY_INPUT_FILE_BYTES
})
@JsonTypeName("SetPdfFormFieldsRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-11-14T13:23:29.247-08:00[America/Los_Angeles]")
public class SetPdfFormFieldsRequest {
  public static final String JSON_PROPERTY_FIELD_VALUES = "FieldValues";
  private List<SetFormFieldValue> fieldValues = null;

  public static final String JSON_PROPERTY_INPUT_FILE_BYTES = "InputFileBytes";
  private byte[] inputFileBytes;


  public SetPdfFormFieldsRequest fieldValues(List<SetFormFieldValue> fieldValues) {
    
    this.fieldValues = fieldValues;
    return this;
  }

  public SetPdfFormFieldsRequest addFieldValuesItem(SetFormFieldValue fieldValuesItem) {
    if (this.fieldValues == null) {
      this.fieldValues = new ArrayList<SetFormFieldValue>();
    }
    this.fieldValues.add(fieldValuesItem);
    return this;
  }

   /**
   * Field values to set
   * @return fieldValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Field values to set")
  @JsonProperty(JSON_PROPERTY_FIELD_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SetFormFieldValue> getFieldValues() {
    return fieldValues;
  }


  public void setFieldValues(List<SetFormFieldValue> fieldValues) {
    this.fieldValues = fieldValues;
  }


  public SetPdfFormFieldsRequest inputFileBytes(byte[] inputFileBytes) {
    
    this.inputFileBytes = inputFileBytes;
    return this;
  }

   /**
   * Contents of the input file to set the fields on
   * @return inputFileBytes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Contents of the input file to set the fields on")
  @JsonProperty(JSON_PROPERTY_INPUT_FILE_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public byte[] getInputFileBytes() {
    return inputFileBytes;
  }


  public void setInputFileBytes(byte[] inputFileBytes) {
    this.inputFileBytes = inputFileBytes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SetPdfFormFieldsRequest setPdfFormFieldsRequest = (SetPdfFormFieldsRequest) o;
    return Objects.equals(this.fieldValues, setPdfFormFieldsRequest.fieldValues) &&
        Arrays.equals(this.inputFileBytes, setPdfFormFieldsRequest.inputFileBytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fieldValues, Arrays.hashCode(inputFileBytes));
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SetPdfFormFieldsRequest {\n");
    sb.append("    fieldValues: ").append(toIndentedString(fieldValues)).append("\n");
    sb.append("    inputFileBytes: ").append(toIndentedString(inputFileBytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

