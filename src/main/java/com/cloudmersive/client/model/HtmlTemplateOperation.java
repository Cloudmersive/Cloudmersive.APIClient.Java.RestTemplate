/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudmersive.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * HtmlTemplateOperation
 */
@JsonPropertyOrder({
  HtmlTemplateOperation.JSON_PROPERTY_ACTION,
  HtmlTemplateOperation.JSON_PROPERTY_MATCH_AGSINT,
  HtmlTemplateOperation.JSON_PROPERTY_REPLACE_WITH
})
@JsonTypeName("HtmlTemplateOperation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-11-14T13:23:29.247-08:00[America/Los_Angeles]")
public class HtmlTemplateOperation {
  /**
   * Operation action to take; possible values are \&quot;Replace\&quot;
   */
  public enum ActionEnum {
    NUMBER_1(1);

    private Integer value;

    ActionEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActionEnum fromValue(Integer value) {
      for (ActionEnum b : ActionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACTION = "Action";
  private ActionEnum action;

  public static final String JSON_PROPERTY_MATCH_AGSINT = "MatchAgsint";
  private String matchAgsint;

  public static final String JSON_PROPERTY_REPLACE_WITH = "ReplaceWith";
  private String replaceWith;


  public HtmlTemplateOperation action(ActionEnum action) {
    
    this.action = action;
    return this;
  }

   /**
   * Operation action to take; possible values are \&quot;Replace\&quot;
   * @return action
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Operation action to take; possible values are \"Replace\"")
  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActionEnum getAction() {
    return action;
  }


  public void setAction(ActionEnum action) {
    this.action = action;
  }


  public HtmlTemplateOperation matchAgsint(String matchAgsint) {
    
    this.matchAgsint = matchAgsint;
    return this;
  }

   /**
   * For Replace operations, the string to match against (to be replaced with ReplaceWith string)
   * @return matchAgsint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For Replace operations, the string to match against (to be replaced with ReplaceWith string)")
  @JsonProperty(JSON_PROPERTY_MATCH_AGSINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMatchAgsint() {
    return matchAgsint;
  }


  public void setMatchAgsint(String matchAgsint) {
    this.matchAgsint = matchAgsint;
  }


  public HtmlTemplateOperation replaceWith(String replaceWith) {
    
    this.replaceWith = replaceWith;
    return this;
  }

   /**
   * For Replace operations, the string to Replace the original string with
   * @return replaceWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For Replace operations, the string to Replace the original string with")
  @JsonProperty(JSON_PROPERTY_REPLACE_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReplaceWith() {
    return replaceWith;
  }


  public void setReplaceWith(String replaceWith) {
    this.replaceWith = replaceWith;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HtmlTemplateOperation htmlTemplateOperation = (HtmlTemplateOperation) o;
    return Objects.equals(this.action, htmlTemplateOperation.action) &&
        Objects.equals(this.matchAgsint, htmlTemplateOperation.matchAgsint) &&
        Objects.equals(this.replaceWith, htmlTemplateOperation.replaceWith);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, matchAgsint, replaceWith);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HtmlTemplateOperation {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    matchAgsint: ").append(toIndentedString(matchAgsint)).append("\n");
    sb.append("    replaceWith: ").append(toIndentedString(replaceWith)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

