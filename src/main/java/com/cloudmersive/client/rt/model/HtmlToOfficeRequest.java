/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudmersive.client.rt.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Details of the HTML to Office request
 */
@ApiModel(description = "Details of the HTML to Office request")
@JsonPropertyOrder({
  HtmlToOfficeRequest.JSON_PROPERTY_HTML
})
@JsonTypeName("HtmlToOfficeRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-11-14T13:47:19.979-08:00[America/Los_Angeles]")
public class HtmlToOfficeRequest {
  public static final String JSON_PROPERTY_HTML = "Html";
  private String html;


  public HtmlToOfficeRequest html(String html) {
    
    this.html = html;
    return this;
  }

   /**
   * HTML to render to Office format
   * @return html
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "HTML to render to Office format")
  @JsonProperty(JSON_PROPERTY_HTML)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHtml() {
    return html;
  }


  public void setHtml(String html) {
    this.html = html;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HtmlToOfficeRequest htmlToOfficeRequest = (HtmlToOfficeRequest) o;
    return Objects.equals(this.html, htmlToOfficeRequest.html);
  }

  @Override
  public int hashCode() {
    return Objects.hash(html);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HtmlToOfficeRequest {\n");
    sb.append("    html: ").append(toIndentedString(html)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

