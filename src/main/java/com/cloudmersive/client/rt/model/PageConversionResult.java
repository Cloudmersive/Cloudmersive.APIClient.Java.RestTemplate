/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudmersive.client.rt.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Converted page as an image
 */
@ApiModel(description = "Converted page as an image")
@JsonPropertyOrder({
  PageConversionResult.JSON_PROPERTY_FILENAME,
  PageConversionResult.JSON_PROPERTY_FILE_BYTES
})
@JsonTypeName("PageConversionResult")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-01T10:54:02.994-07:00[America/Los_Angeles]")
public class PageConversionResult {
  public static final String JSON_PROPERTY_FILENAME = "Filename";
  private String filename;

  public static final String JSON_PROPERTY_FILE_BYTES = "FileBytes";
  private byte[] fileBytes;


  public PageConversionResult filename(String filename) {
    
    this.filename = filename;
    return this;
  }

   /**
   * File name of the image in the converted file format
   * @return filename
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "File name of the image in the converted file format")
  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilename() {
    return filename;
  }


  public void setFilename(String filename) {
    this.filename = filename;
  }


  public PageConversionResult fileBytes(byte[] fileBytes) {
    
    this.fileBytes = fileBytes;
    return this;
  }

   /**
   * File bytes (contents) of the image in converted file format
   * @return fileBytes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "File bytes (contents) of the image in converted file format")
  @JsonProperty(JSON_PROPERTY_FILE_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public byte[] getFileBytes() {
    return fileBytes;
  }


  public void setFileBytes(byte[] fileBytes) {
    this.fileBytes = fileBytes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PageConversionResult pageConversionResult = (PageConversionResult) o;
    return Objects.equals(this.filename, pageConversionResult.filename) &&
        Arrays.equals(this.fileBytes, pageConversionResult.fileBytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filename, Arrays.hashCode(fileBytes));
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PageConversionResult {\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    fileBytes: ").append(toIndentedString(fileBytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

