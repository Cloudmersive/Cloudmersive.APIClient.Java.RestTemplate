/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudmersive.client.rt.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Result of validating a URL with full validation
 */
@JsonPropertyOrder({
  ValidateUrlResponseFull.JSON_PROPERTY_VALID_U_R_L,
  ValidateUrlResponseFull.JSON_PROPERTY_VALID_SYNTAX,
  ValidateUrlResponseFull.JSON_PROPERTY_VALID_DOMAIN,
  ValidateUrlResponseFull.JSON_PROPERTY_VALID_ENDPOINT,
  ValidateUrlResponseFull.JSON_PROPERTY_WELL_FORMED_U_R_L
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-22T03:15:48.283468600Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class ValidateUrlResponseFull {
  public static final String JSON_PROPERTY_VALID_U_R_L = "ValidURL";
  private Boolean validURL;

  public static final String JSON_PROPERTY_VALID_SYNTAX = "Valid_Syntax";
  private Boolean validSyntax;

  public static final String JSON_PROPERTY_VALID_DOMAIN = "Valid_Domain";
  private Boolean validDomain;

  public static final String JSON_PROPERTY_VALID_ENDPOINT = "Valid_Endpoint";
  private Boolean validEndpoint;

  public static final String JSON_PROPERTY_WELL_FORMED_U_R_L = "WellFormedURL";
  private String wellFormedURL;

  public ValidateUrlResponseFull() {
  }

  public ValidateUrlResponseFull validURL(Boolean validURL) {
    
    this.validURL = validURL;
    return this;
  }

  /**
   * True if the URL has valid syntax, a valid domain, a valid endpoint, and passes virus scan checks; false otherwise
   * @return validURL
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALID_U_R_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getValidURL() {
    return validURL;
  }


  @JsonProperty(JSON_PROPERTY_VALID_U_R_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidURL(Boolean validURL) {
    this.validURL = validURL;
  }

  public ValidateUrlResponseFull validSyntax(Boolean validSyntax) {
    
    this.validSyntax = validSyntax;
    return this;
  }

  /**
   * True if the URL has valid syntax, false otherwise
   * @return validSyntax
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALID_SYNTAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getValidSyntax() {
    return validSyntax;
  }


  @JsonProperty(JSON_PROPERTY_VALID_SYNTAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidSyntax(Boolean validSyntax) {
    this.validSyntax = validSyntax;
  }

  public ValidateUrlResponseFull validDomain(Boolean validDomain) {
    
    this.validDomain = validDomain;
    return this;
  }

  /**
   * True if the domain name is valid and exists, false otherwise
   * @return validDomain
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALID_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getValidDomain() {
    return validDomain;
  }


  @JsonProperty(JSON_PROPERTY_VALID_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidDomain(Boolean validDomain) {
    this.validDomain = validDomain;
  }

  public ValidateUrlResponseFull validEndpoint(Boolean validEndpoint) {
    
    this.validEndpoint = validEndpoint;
    return this;
  }

  /**
   * True if the endpoint is up and responsive and passes a virus scan check, false otherwise
   * @return validEndpoint
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALID_ENDPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getValidEndpoint() {
    return validEndpoint;
  }


  @JsonProperty(JSON_PROPERTY_VALID_ENDPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidEndpoint(Boolean validEndpoint) {
    this.validEndpoint = validEndpoint;
  }

  public ValidateUrlResponseFull wellFormedURL(String wellFormedURL) {
    
    this.wellFormedURL = wellFormedURL;
    return this;
  }

  /**
   * Well-formed version of the URL
   * @return wellFormedURL
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WELL_FORMED_U_R_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWellFormedURL() {
    return wellFormedURL;
  }


  @JsonProperty(JSON_PROPERTY_WELL_FORMED_U_R_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWellFormedURL(String wellFormedURL) {
    this.wellFormedURL = wellFormedURL;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidateUrlResponseFull validateUrlResponseFull = (ValidateUrlResponseFull) o;
    return Objects.equals(this.validURL, validateUrlResponseFull.validURL) &&
        Objects.equals(this.validSyntax, validateUrlResponseFull.validSyntax) &&
        Objects.equals(this.validDomain, validateUrlResponseFull.validDomain) &&
        Objects.equals(this.validEndpoint, validateUrlResponseFull.validEndpoint) &&
        Objects.equals(this.wellFormedURL, validateUrlResponseFull.wellFormedURL);
  }

  @Override
  public int hashCode() {
    return Objects.hash(validURL, validSyntax, validDomain, validEndpoint, wellFormedURL);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidateUrlResponseFull {\n");
    sb.append("    validURL: ").append(toIndentedString(validURL)).append("\n");
    sb.append("    validSyntax: ").append(toIndentedString(validSyntax)).append("\n");
    sb.append("    validDomain: ").append(toIndentedString(validDomain)).append("\n");
    sb.append("    validEndpoint: ").append(toIndentedString(validEndpoint)).append("\n");
    sb.append("    wellFormedURL: ").append(toIndentedString(wellFormedURL)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

