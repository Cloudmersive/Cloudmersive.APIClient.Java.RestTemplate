/*
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudmersive.client.rt.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Result of validating a URL with syntax only
 */
@ApiModel(description = "Result of validating a URL with syntax only")
@JsonPropertyOrder({
  ValidateUrlResponseSyntaxOnly.JSON_PROPERTY_VALID_U_R_L,
  ValidateUrlResponseSyntaxOnly.JSON_PROPERTY_WELL_FORMED_U_R_L
})
@JsonTypeName("ValidateUrlResponseSyntaxOnly")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-11-14T13:47:06.593-08:00[America/Los_Angeles]")
public class ValidateUrlResponseSyntaxOnly {
  public static final String JSON_PROPERTY_VALID_U_R_L = "ValidURL";
  private Boolean validURL;

  public static final String JSON_PROPERTY_WELL_FORMED_U_R_L = "WellFormedURL";
  private String wellFormedURL;


  public ValidateUrlResponseSyntaxOnly validURL(Boolean validURL) {
    
    this.validURL = validURL;
    return this;
  }

   /**
   * True if the URL is valid, false otherwise
   * @return validURL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the URL is valid, false otherwise")
  @JsonProperty(JSON_PROPERTY_VALID_U_R_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getValidURL() {
    return validURL;
  }


  public void setValidURL(Boolean validURL) {
    this.validURL = validURL;
  }


  public ValidateUrlResponseSyntaxOnly wellFormedURL(String wellFormedURL) {
    
    this.wellFormedURL = wellFormedURL;
    return this;
  }

   /**
   * Well-formed version of the URL
   * @return wellFormedURL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Well-formed version of the URL")
  @JsonProperty(JSON_PROPERTY_WELL_FORMED_U_R_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWellFormedURL() {
    return wellFormedURL;
  }


  public void setWellFormedURL(String wellFormedURL) {
    this.wellFormedURL = wellFormedURL;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidateUrlResponseSyntaxOnly validateUrlResponseSyntaxOnly = (ValidateUrlResponseSyntaxOnly) o;
    return Objects.equals(this.validURL, validateUrlResponseSyntaxOnly.validURL) &&
        Objects.equals(this.wellFormedURL, validateUrlResponseSyntaxOnly.wellFormedURL);
  }

  @Override
  public int hashCode() {
    return Objects.hash(validURL, wellFormedURL);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidateUrlResponseSyntaxOnly {\n");
    sb.append("    validURL: ").append(toIndentedString(validURL)).append("\n");
    sb.append("    wellFormedURL: ").append(toIndentedString(wellFormedURL)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

