/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudmersive.client.rt.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Request to encode content to Base 64
 */
@JsonPropertyOrder({
  Base64EncodeRequest.JSON_PROPERTY_CONTENT_TO_ENCODE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-25T20:51:24.468928200Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class Base64EncodeRequest {
  public static final String JSON_PROPERTY_CONTENT_TO_ENCODE = "ContentToEncode";
  private byte[] contentToEncode;

  public Base64EncodeRequest() {
  }

  public Base64EncodeRequest contentToEncode(byte[] contentToEncode) {
    
    this.contentToEncode = contentToEncode;
    return this;
  }

  /**
   * Input content to encode into Base 64
   * @return contentToEncode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENT_TO_ENCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public byte[] getContentToEncode() {
    return contentToEncode;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_TO_ENCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContentToEncode(byte[] contentToEncode) {
    this.contentToEncode = contentToEncode;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Base64EncodeRequest base64EncodeRequest = (Base64EncodeRequest) o;
    return Arrays.equals(this.contentToEncode, base64EncodeRequest.contentToEncode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(Arrays.hashCode(contentToEncode));
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Base64EncodeRequest {\n");
    sb.append("    contentToEncode: ").append(toIndentedString(contentToEncode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

