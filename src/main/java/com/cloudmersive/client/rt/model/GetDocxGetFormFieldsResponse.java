/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudmersive.client.rt.model;

import java.util.Objects;
import java.util.Arrays;
import com.cloudmersive.client.rt.model.DocxContentControl;
import com.cloudmersive.client.rt.model.HandlebarFormField;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Result of running a DocxGetFormFields command
 */
@ApiModel(description = "Result of running a DocxGetFormFields command")
@JsonPropertyOrder({
  GetDocxGetFormFieldsResponse.JSON_PROPERTY_SUCCESSFUL,
  GetDocxGetFormFieldsResponse.JSON_PROPERTY_CONTENT_CONTROLS,
  GetDocxGetFormFieldsResponse.JSON_PROPERTY_HANDLEBAR_FORM_FIELDS
})
@JsonTypeName("GetDocxGetFormFieldsResponse")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-01T10:54:02.994-07:00[America/Los_Angeles]")
public class GetDocxGetFormFieldsResponse {
  public static final String JSON_PROPERTY_SUCCESSFUL = "Successful";
  private Boolean successful;

  public static final String JSON_PROPERTY_CONTENT_CONTROLS = "ContentControls";
  private List<DocxContentControl> contentControls = null;

  public static final String JSON_PROPERTY_HANDLEBAR_FORM_FIELDS = "HandlebarFormFields";
  private List<HandlebarFormField> handlebarFormFields = null;


  public GetDocxGetFormFieldsResponse successful(Boolean successful) {
    
    this.successful = successful;
    return this;
  }

   /**
   * True if successful, false otherwise
   * @return successful
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if successful, false otherwise")
  @JsonProperty(JSON_PROPERTY_SUCCESSFUL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSuccessful() {
    return successful;
  }


  public void setSuccessful(Boolean successful) {
    this.successful = successful;
  }


  public GetDocxGetFormFieldsResponse contentControls(List<DocxContentControl> contentControls) {
    
    this.contentControls = contentControls;
    return this;
  }

  public GetDocxGetFormFieldsResponse addContentControlsItem(DocxContentControl contentControlsItem) {
    if (this.contentControls == null) {
      this.contentControls = new ArrayList<DocxContentControl>();
    }
    this.contentControls.add(contentControlsItem);
    return this;
  }

   /**
   * Content controls in the DOCX
   * @return contentControls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Content controls in the DOCX")
  @JsonProperty(JSON_PROPERTY_CONTENT_CONTROLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DocxContentControl> getContentControls() {
    return contentControls;
  }


  public void setContentControls(List<DocxContentControl> contentControls) {
    this.contentControls = contentControls;
  }


  public GetDocxGetFormFieldsResponse handlebarFormFields(List<HandlebarFormField> handlebarFormFields) {
    
    this.handlebarFormFields = handlebarFormFields;
    return this;
  }

  public GetDocxGetFormFieldsResponse addHandlebarFormFieldsItem(HandlebarFormField handlebarFormFieldsItem) {
    if (this.handlebarFormFields == null) {
      this.handlebarFormFields = new ArrayList<HandlebarFormField>();
    }
    this.handlebarFormFields.add(handlebarFormFieldsItem);
    return this;
  }

   /**
   * Form fields that comply with the Handlebar style, that is they are surrounded by two curly braces on either side such as \&quot;{{FieldName}}\&quot;, in the DOCX
   * @return handlebarFormFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Form fields that comply with the Handlebar style, that is they are surrounded by two curly braces on either side such as \"{{FieldName}}\", in the DOCX")
  @JsonProperty(JSON_PROPERTY_HANDLEBAR_FORM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<HandlebarFormField> getHandlebarFormFields() {
    return handlebarFormFields;
  }


  public void setHandlebarFormFields(List<HandlebarFormField> handlebarFormFields) {
    this.handlebarFormFields = handlebarFormFields;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDocxGetFormFieldsResponse getDocxGetFormFieldsResponse = (GetDocxGetFormFieldsResponse) o;
    return Objects.equals(this.successful, getDocxGetFormFieldsResponse.successful) &&
        Objects.equals(this.contentControls, getDocxGetFormFieldsResponse.contentControls) &&
        Objects.equals(this.handlebarFormFields, getDocxGetFormFieldsResponse.handlebarFormFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(successful, contentControls, handlebarFormFields);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDocxGetFormFieldsResponse {\n");
    sb.append("    successful: ").append(toIndentedString(successful)).append("\n");
    sb.append("    contentControls: ").append(toIndentedString(contentControls)).append("\n");
    sb.append("    handlebarFormFields: ").append(toIndentedString(handlebarFormFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

